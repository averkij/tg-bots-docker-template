services:
  # nginx-proxy:
  #   image: jwilder/nginx-proxy
  #   container_name: nginx-proxy
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #     - ./certs:/etc/nginx/certs
  #     - ./vhost.d:/etc/nginx/vhost.d
  #     - ./html:/usr/share/nginx/html
  #     - ./conf.d:/etc/nginx/conf.d
  #   environment:
  #     - DEFAULT_HOST=${DEFAULT_HOST}
  #   restart: always

  # letsencrypt:
  #   image: jrcs/letsencrypt-nginx-proxy-companion
  #   container_name: letsencrypt
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - ./certs:/etc/nginx/certs
  #     - ./vhost.d:/etc/nginx/vhost.d
  #     - ./html:/usr/share/nginx/html
  #   environment:
  #     - NGINX_PROXY_CONTAINER=nginx-proxy
  #     - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
  #   depends_on:
  #     - nginx-proxy
  #   restart: always

  bot1:
    build:
      context: ./bot1
    container_name: bot1
    restart: unless-stopped
    volumes:
      - ./bot1:/app
    environment:
      - BOT_TOKEN=${BOT_1_TOKEN}
      - VIRTUAL_HOST=bot1.${DEFAULT_HOST}
      - LETSENCRYPT_HOST=bot1.${DEFAULT_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    # networks:
    #   - telegram_bots

  # bot2:
  #   build:
  #     context: ./bot2
  #   container_name: bot2
  #   restart: unless-stopped
  #   volumes:
  #     - ./bot2:/app
  #   environment:
  #     - BOT_TOKEN=your-bot-token-2
  #   networks:
  #     - telegram_bots

networks:
  telegram_bots: